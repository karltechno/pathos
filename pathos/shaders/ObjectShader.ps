#include "shaderlib/ShaderOutput.hlsli"

struct TestData
{
    float4 time;
    float4x4 mvp;
};

Texture2D<float4> g_diffuse : register(t0);
Texture2D<float4> g_normal : register(t1);
Texture2D<float4> g_metalRoughness : register(t2);
Texture2D<float4> g_ao : register(t3);


ConstantBuffer<TestData> g_data : register(b0, space0);

float4 main(in VSOut_ObjectFull _input) : SV_Target
{
    float3 normal = normalize(_input.normal);
    float3 tangent = normalize(_input.tangentSign.xyz);
    float3x3 tbn = float3x3(tangent, ReconstructBitangent(normal, _input.tangentSign), normal);
    return float4(tbn[2] * 0.5 + 0.5, 1.0);
}   